{"ast":null,"code":"export const FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nexport const FETCH_POSTS_FAILURE = 'FETCH_POSTS_FAILURE';\nexport function fetchPostsRequest() {\n  return {\n    type: FETCH_POSTS_REQUEST\n  };\n}\n;\nexport function fetchPostsSuccess(posts) {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    payload: posts\n  };\n}\n;\nexport function fetchPostsFailure(error) {\n  return {\n    type: FETCH_POSTS_FAILURE,\n    payload: error\n  };\n}\n;\nexport const fetchPosts = () => {\n  return dispatch => {\n    dispatch(fetchPostsRequest());\n    fetch(`https://jsonplaceholder.typicode.com/posts`) // Replace with your API endpoint and postId\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Request failed');\n      }\n      return response.json();\n    }).then(post => {\n      dispatch(fetchPostsSuccess(post));\n    }).catch(error => {\n      dispatch(fetchPostsFailure(error.message));\n    });\n  };\n};","map":{"version":3,"names":["FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","fetchPostsRequest","type","fetchPostsSuccess","posts","payload","fetchPostsFailure","error","fetchPosts","dispatch","fetch","then","response","ok","Error","json","post","catch","message"],"sources":["D:/Chuyên ngành 5/FER/Demo_ReactFlux/src/reducer/action_post.js"],"sourcesContent":["export const FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\r\nexport const FETCH_POSTS_FAILURE = 'FETCH_POSTS_FAILURE';\r\n\r\nexport function fetchPostsRequest  ()  {\r\n  return {type: FETCH_POSTS_REQUEST}\r\n};\r\n\r\nexport function fetchPostsSuccess (posts) {\r\n  return {type: FETCH_POSTS_SUCCESS,payload: posts}\r\n};\r\n\r\nexport function fetchPostsFailure (error)  {\r\n  return {type: FETCH_POSTS_FAILURE,payload: error}\r\n};\r\n\r\nexport const fetchPosts = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchPostsRequest());\r\n    \r\n        fetch(`https://jsonplaceholder.typicode.com/posts`) // Replace with your API endpoint and postId\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error('Request failed');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((post) => {\r\n            dispatch(fetchPostsSuccess(post));\r\n          })\r\n          .catch((error) => {\r\n            dispatch(fetchPostsFailure(error.message));\r\n          });\r\n      };\r\n};\r\n\r\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,SAASC,iBAAiBA,CAAA,EAAM;EACrC,OAAO;IAACC,IAAI,EAAEJ;EAAmB,CAAC;AACpC;AAAC;AAED,OAAO,SAASK,iBAAiBA,CAAEC,KAAK,EAAE;EACxC,OAAO;IAACF,IAAI,EAAEH,mBAAmB;IAACM,OAAO,EAAED;EAAK,CAAC;AACnD;AAAC;AAED,OAAO,SAASE,iBAAiBA,CAAEC,KAAK,EAAG;EACzC,OAAO;IAACL,IAAI,EAAEF,mBAAmB;IAACK,OAAO,EAAEE;EAAK,CAAC;AACnD;AAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAQC,QAAQ,IAAK;IACjBA,QAAQ,CAACR,iBAAiB,CAAC,CAAC,CAAC;IAE7BS,KAAK,CAAE,4CAA2C,CAAC,CAAC;IAAA,CACjDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdP,QAAQ,CAACN,iBAAiB,CAACa,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAAEV,KAAK,IAAK;MAChBE,QAAQ,CAACH,iBAAiB,CAACC,KAAK,CAACW,OAAO,CAAC,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;AACP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}